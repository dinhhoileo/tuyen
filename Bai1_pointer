#include <iostream>
#include<math.h>
using namespace std;
// function input array
void printArray(int *arr, int n) {
    for (int i = 0; i < n; i++) {
        cout << "arr[" << i << "]= ";
        cin >> *(arr + i);
    }
}
// function output array
void outputArray(int *arr, int n) {
    for (int i = 0; i < n; i++) {
        cout << *(arr + i) << " ";
    }
    cout << endl;
}
// function tính tổng các phần tử trong mảng
int sumArray(int *arr, int n){
    int sum=0;
    for (int i = 0; i < n; i++)
    {
        sum+=*(arr+i);
    }
    return sum;
}
// function tính tổng số chẵn
int sumPos(int *arr, int n){
    int sum=0;
    for (int i = 0; i < n; i++)
    {
        if (*(arr+i)%2==0)
        {
            sum+=*(arr+i);
        }
    }
    return sum;
}
 // function kiểm tra số nguyên tố
bool isPrime(int n) { 
    if (n <= 1) return false;
    for (int i = 2; i <= n / 2; i++) {
        if (n % i == 0) {
            return false;
        }
    }
    return true;
}
// function tính tổng số nguyên tố
int sumPrime(int *arr, int n){
    int sum=0;
    for (int i = 0; i < n; i++)
    {
        if (isPrime(*(arr+i)))
        {
            sum+=*(arr+i);
        }  
    }
    return sum;
}
// function tính số lẻ 
int sumPos1(int *arr, int n){
    int sum=0;
    for (int i = 0; i < n; i++)
    {
        if (*(arr+i)%3==1||*(arr+i)==3||*(arr+i)==1)
        {
            sum+=*(arr+i);
        }
    }
    return sum;
}
// function tìm số chẵn đầu tiên
int findEvenNumber(int *arr, int n){
    for (int i = 0; i < n; i++)
    {
        if (*(arr+i)%2==0)
        {
            return i;
        }
        
    }
    return -1;
}
// function tìm số lẻ đầu tiên
int findOddNumber(int *arr, int n){
    for (int i = 0; i < n; i++)
    {
        if (*(arr+i)%2!=0)
        {
            return i;
        }
    }
    return -1;
}
//function tìm số nguyên tố đầu tiên
int findPrime(int *arr,int n){
    for (int i = 0; i < n; i++)
    {
        if (isPrime(*(arr+i)))
        {
            return *(arr+i);
        }
    }
    return -1;
}
// function tìm phần tử chẵn ở cuối mảng
int findEvenNumberAtTheEnd(int *arr, int n){
    for (int i = n-1; i > 0; i--)
    {
        if (*(arr+i)%2==0)
        {
            return i;
        }
    }
    return -1;
}
// function kiểm tra số chính phương
bool Check(int a){
    a=sqrt(a);
    return a*a==a;
}
// function tìm số chính phương
int findPerfectSquare(int *arr, int n){
    for (int i = n-1; i >= 0; i--)
    {
        if (Check(*(arr+i)))
        {
            return i;
        }
    }
    return -1;
}
// function tìm phần tử lớn nhất trong mảng
int findMaxArray(int *arr, int n){
    int max=*arr;
    for (int i = 1; i < n; i++)
    {
        if (max<*(arr+i))
        {
            max=*(arr+i);
        }
    }
    return max;
}
// function đếm số lượng số chẵn
int countEvenNumber(int *arr, int n){
    int count=0;
    for (int i = 0; i < n; i++)
    {
        if (*(arr+i)%2==0)
        {
            count++;
        }
    }
    return count;
}
// function đếm số lượng phần tử có trong mảng
int countMaxInArray(int *arr, int n){
    int max=*arr;
    int count=1;
    for (int i = 1; i < n; i++)
    {
       if (*(arr+i) > max) {
            max = *(arr+i);
            count = 1;
        }else if (*(arr+i) == max) {
            count++;
        }
    }
    return count;
}
// function tìm vị trí phần tử lớn đầu tiên
int findIndexMaxArray(int *arr, int n){
    int max=*arr;
    for (int i = 1; i < n; i++)
    {
        if (max<*(arr+i))
        {
            return i;
        }
    }
    return 0;
}
// function thêm vào đầu mảng một phần tử
void addPosInHeadArray(int *arr, int &n, int number){
    for (int i = n-1; i >=0; i--)
    {
       *(arr+i+1)=*(arr+i);
    }
    *arr=number;
    n++;
}
//function thêm vào cuối mảng
void addPosInTailArray(int *arr, int &n, int number){
    for (int i = 0; i < n; i++)
    {
        *(arr+n)=number;
    }
    n++;
}
// function thêm vào vị trí x bất kỳ
void addPosRamdomInArray(int *arr, int &n, int index, int number){
    for (int i = index; i < n; i++)
    {
        *(arr+i+1)=*(arr+i);
    }
    *(arr+index)=number;
    n++;
}
int main() {
    int n;
    do
    {
        cout << "Nhap so phan tu mang: ";
        cin >> n;
    } while (n<0||n>100);
    
    int *arr = new int[n];
    printArray(arr, n);
    outputArray(arr, n);
    // cout<<"Sum="<<sumArray(arr,n)<<endl;
    // cout<<"Sum (pos%2) ="<<sumPos(arr,n)<<endl;
    // cout<<"Sum (pos%3==1) ="<<sumPos1(arr,n)<<endl;
    // cout<<"Sum prime:"<<sumPrime(arr,n)<<endl;
    // cout<<"The first even number in array:"<<findEvenNumber(arr,n)<<endl;
    // cout<<"The first odd number in array:"<<findOddNumber(arr,n)<<endl;
    // cout<<"The first prime number in array:"<<findPrime(arr,n)<<endl;
    // cout<<findEvenNumberAtTheEnd(arr,n)<<endl;
    // cout<<findPerfectSquare(arr,n)<<endl;
    // cout<<findMaxArray(arr,n);
    // cout<<countEvenNumber(arr,n);
    // cout<<countMaxInArray(arr, n);
    // cout<<findIndexMaxArray(arr,n);
    // addPosInArray(arr,n,5);
    // cout<<"After"<<endl;
    // outputArray(arr,n);
    // addPosInTailArray(arr,n,10);
    addPosRamdomInArray(arr,n,3,6);
    outputArray(arr,n);
    delete [] arr;
    return 0;
}

